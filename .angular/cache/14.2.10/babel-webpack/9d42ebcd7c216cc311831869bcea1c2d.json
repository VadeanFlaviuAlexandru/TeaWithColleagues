{"ast":null,"code":"import _asyncToGenerator from \"D:/CodingStuff/GitHub/TeaWithColleagues/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { environment } from 'src/environments/environment';\nimport { createEventId, INITIAL_EVENTS } from './event-utils';\nlet ScheduleComponent = class ScheduleComponent {\n  constructor(changeDetector, IdUserService, http) {\n    this.changeDetector = changeDetector;\n    this.IdUserService = IdUserService;\n    this.http = http;\n    this.idUser = 0;\n    this.UserName = 'default';\n    this.location = 'default';\n    this.UserSurname = 'default';\n    this.UserPhoneNumber = 'default';\n    this.success = false;\n    this.failure = false;\n    this.CreateEvent = false;\n    this.DoneCreateEvent = false;\n    this.title = 'default';\n    this.currentEventClicked = 'default';\n    this.currentEventClickedLOCATION = 'default';\n    this.currentEventClickedDATE = 'default';\n    this.currentEventClickedDATEsub = 'default';\n    this.deleteEvent = false;\n    this.createEvent = false;\n    this.EditForm = new FormGroup({\n      name: new FormControl(),\n      surname: new FormControl(),\n      phoneNumber: new FormControl()\n    });\n    this.CreateEventForm = new FormGroup({\n      title: new FormControl(),\n      location: new FormControl()\n    });\n    this.calendarVisible = true;\n    this.calendarOptions = {\n      plugins: [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      initialView: 'dayGridMonth',\n      initialEvents: INITIAL_EVENTS,\n      weekends: true,\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true,\n      locale: 'ro',\n      select: this.handleDateSelect.bind(this),\n      eventClick: this.handleEventClick.bind(this),\n      eventsSet: this.handleEvents.bind(this)\n    };\n    this.currentEvents = [];\n    this.myDialog5 = new ElementRef(null);\n  }\n\n  ngOnInit() {\n    this.idUser = this.IdUserService.getIdUser();\n    console.log('On schedule page with id:');\n    console.log(this.idUser);\n    this.GetUserInfo();\n  }\n\n  reset() {\n    this.success = false;\n    this.failure = false;\n  }\n\n  FinishEdit() {\n    let UserE = {\n      idUser: this.idUser,\n      name: this.EditForm.get('name')?.value,\n      surname: this.EditForm.get('surname')?.value,\n      phoneNumber: this.EditForm.get('phoneNumber')?.value\n    };\n    this.EditUser(UserE).subscribe(response => {\n      if (response.statusText == 'OK') {\n        this.success = true;\n      } else {\n        this.failure = false;\n      }\n    });\n  }\n\n  EditUser(UserE) {\n    return this.http.put(`${environment.BaseUrl}/User/edit-user`, UserE, {\n      observe: 'response',\n      responseType: 'text'\n    });\n  }\n\n  GetUserInfo() {\n    this.SendUserID().subscribe(response => {\n      const responseBody = JSON.parse(response.body);\n      this.UserName = responseBody.name;\n      this.UserSurname = responseBody.surname;\n      this.UserPhoneNumber = responseBody.phoneNumber;\n    });\n  }\n\n  SendUserID() {\n    return this.http.get(`${environment.BaseUrl}/User/get-user-by-id?id=${this.idUser}`, {\n      observe: 'response',\n      responseType: 'text'\n    });\n  }\n\n  handleCalendarToggle() {\n    this.calendarVisible = !this.calendarVisible;\n  }\n\n  handleWeekendsToggle() {\n    const {\n      calendarOptions\n    } = this;\n    calendarOptions.weekends = !calendarOptions.weekends;\n  }\n\n  handleDateSelect(selectInfo) {\n    const dialog = this.myDialog5.nativeElement;\n    dialog.show();\n\n    const closeListener = () => {\n      this.title = this.CreateEventForm.get('title')?.value;\n      this.location = this.CreateEventForm.get('location')?.value;\n      this.SavingTitle(selectInfo);\n      dialog.removeEventListener('close', closeListener);\n    };\n\n    dialog.addEventListener('close', closeListener);\n    this.CreateEventForm.get('title')?.reset();\n  }\n\n  SavingTitle(selectInfo) {\n    const titleINPUT = this.title;\n    const calendarApi = selectInfo.view.calendar;\n    const locationINPUT = this.location;\n    calendarApi.unselect();\n\n    if (titleINPUT) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title: titleINPUT,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n        location: locationINPUT\n      });\n    }\n  }\n\n  handleEventClick(clickInfo) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const dialog = _this.myDialog6.nativeElement;\n      _this.currentEventClicked = clickInfo.event.title;\n      _this.currentEventClickedLOCATION = clickInfo.event.extendedProps['location'];\n      _this.currentEventClickedDATEsub = clickInfo.event.start?.toString();\n      _this.currentEventClickedDATE = _this.currentEventClickedDATEsub.substring(0, 15); // Wed Jan 18 2023\n\n      const dateC = new Date(_this.currentEventClickedDATE);\n      const formatDate = new Date(dateC.toUTCString()).toISOString();\n      console.log(formatDate);\n      dialog.show();\n\n      while (!_this.deleteEvent) {\n        yield new Promise(resolve => setTimeout(resolve, 500));\n      }\n\n      clickInfo.event.remove();\n      _this.deleteEvent = false;\n      console.log(_this.deleteEvent);\n    })();\n  }\n\n  AddAvailability() {\n    const dialog = this.myDialog6.nativeElement;\n    dialog.show();\n  }\n\n  POSTAvailability(availability) {\n    return this.http.post(`${environment.BaseUrl}/Availability/users/${this.idUser}/availability`, availability, {\n      observe: 'response',\n      responseType: 'text'\n    });\n  }\n\n  handleEvents(events) {\n    this.currentEvents = events;\n    this.changeDetector.detectChanges();\n  }\n\n};\n\n__decorate([ViewChild('myDialog5')], ScheduleComponent.prototype, \"myDialog5\", void 0);\n\n__decorate([ViewChild('myDialog6')], ScheduleComponent.prototype, \"myDialog6\", void 0);\n\n__decorate([ViewChild('myDialog2')], ScheduleComponent.prototype, \"myDialog2\", void 0);\n\nScheduleComponent = __decorate([Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})], ScheduleComponent);\nexport { ScheduleComponent };","map":{"version":3,"mappings":"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","names":["Component","ElementRef","ViewChild","FormControl","FormGroup","dayGridPlugin","interactionPlugin","listPlugin","timeGridPlugin","environment","createEventId","INITIAL_EVENTS","ScheduleComponent","constructor","changeDetector","IdUserService","http","name","surname","phoneNumber","title","location","plugins","headerToolbar","left","center","right","initialView","initialEvents","weekends","editable","selectable","selectMirror","dayMaxEvents","locale","select","handleDateSelect","bind","eventClick","handleEventClick","eventsSet","handleEvents","myDialog5","ngOnInit","idUser","getIdUser","console","log","GetUserInfo","reset","success","failure","FinishEdit","UserE","EditForm","get","value","EditUser","subscribe","response","statusText","put","BaseUrl","observe","responseType","SendUserID","responseBody","JSON","parse","body","UserName","UserSurname","UserPhoneNumber","handleCalendarToggle","calendarVisible","handleWeekendsToggle","calendarOptions","selectInfo","dialog","nativeElement","show","closeListener","CreateEventForm","SavingTitle","removeEventListener","addEventListener","titleINPUT","calendarApi","view","calendar","locationINPUT","unselect","addEvent","id","start","startStr","end","endStr","allDay","clickInfo","myDialog6","currentEventClicked","event","currentEventClickedLOCATION","extendedProps","currentEventClickedDATEsub","toString","currentEventClickedDATE","substring","dateC","Date","formatDate","toUTCString","toISOString","deleteEvent","Promise","resolve","setTimeout","remove","AddAvailability","POSTAvailability","availability","post","events","currentEvents","detectChanges","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\CodingStuff\\GitHub\\TeaWithColleagues\\src\\app\\schedule\\schedule.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n  CalendarOptions,\r\n  DateSelectArg,\r\n  EventApi,\r\n  EventClickArg,\r\n} from '@fullcalendar/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IdUserService } from '../id-user.service';\r\nimport { UserE } from '../models/UserE';\r\nimport { createEventId, INITIAL_EVENTS } from './event-utils';\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.scss'],\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n  @ViewChild('myDialog5') myDialog5?: ElementRef;\r\n  @ViewChild('myDialog6') myDialog6?: ElementRef;\r\n  @ViewChild('myDialog2') myDialog2?: ElementRef;\r\n\r\n  idUser: number = 0;\r\n  UserName: string = 'default';\r\n  location: string = 'default';\r\n  UserSurname: string = 'default';\r\n  UserPhoneNumber: string = 'default';\r\n  success = false;\r\n  failure = false;\r\n  CreateEvent = false;\r\n  DoneCreateEvent = false;\r\n  title: string = 'default';\r\n  currentEventClicked: string = 'default';\r\n  currentEventClickedLOCATION: string = 'default';\r\n  currentEventClickedDATE: string = 'default'!;\r\n  currentEventClickedDATEsub: string = 'default';\r\n\r\n  deleteEvent = false;\r\n  createEvent = false;\r\n\r\n  ngOnInit(): void {\r\n    this.idUser = this.IdUserService.getIdUser();\r\n    console.log('On schedule page with id:');\r\n    console.log(this.idUser);\r\n    this.GetUserInfo();\r\n  }\r\n\r\n  reset() {\r\n    this.success = false;\r\n    this.failure = false;\r\n  }\r\n\r\n  EditForm = new FormGroup({\r\n    name: new FormControl(),\r\n    surname: new FormControl(),\r\n    phoneNumber: new FormControl(),\r\n  });\r\n  CreateEventForm = new FormGroup({\r\n    title: new FormControl(),\r\n    location: new FormControl(),\r\n  });\r\n\r\n  FinishEdit() {\r\n    let UserE: UserE = {\r\n      idUser: this.idUser,\r\n      name: this.EditForm.get('name')?.value,\r\n      surname: this.EditForm.get('surname')?.value,\r\n      phoneNumber: this.EditForm.get('phoneNumber')?.value,\r\n    };\r\n    this.EditUser(UserE).subscribe((response) => {\r\n      if (response.statusText == 'OK') {\r\n        this.success = true;\r\n      } else {\r\n        this.failure = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  EditUser(UserE: any) {\r\n    return this.http.put(`${environment.BaseUrl}/User/edit-user`, UserE, {\r\n      observe: 'response',\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  GetUserInfo() {\r\n    this.SendUserID().subscribe((response) => {\r\n      const responseBody = JSON.parse(response.body!);\r\n      this.UserName = responseBody.name;\r\n      this.UserSurname = responseBody.surname;\r\n      this.UserPhoneNumber = responseBody.phoneNumber;\r\n    });\r\n  }\r\n\r\n  SendUserID() {\r\n    return this.http.get(\r\n      `${environment.BaseUrl}/User/get-user-by-id?id=${this.idUser}`,\r\n      {\r\n        observe: 'response',\r\n        responseType: 'text',\r\n      }\r\n    );\r\n  }\r\n\r\n  calendarVisible = true;\r\n  calendarOptions: CalendarOptions = {\r\n    plugins: [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin],\r\n    headerToolbar: {\r\n      left: 'prev,next today',\r\n      center: 'title',\r\n      right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\r\n    },\r\n    initialView: 'dayGridMonth',\r\n    initialEvents: INITIAL_EVENTS,\r\n    weekends: true,\r\n    editable: true,\r\n    selectable: true,\r\n    selectMirror: true,\r\n    dayMaxEvents: true,\r\n    locale: 'ro',\r\n    select: this.handleDateSelect.bind(this),\r\n    eventClick: this.handleEventClick.bind(this),\r\n    eventsSet: this.handleEvents.bind(this),\r\n  };\r\n  currentEvents: EventApi[] = [];\r\n\r\n  constructor(\r\n    private changeDetector: ChangeDetectorRef,\r\n    private IdUserService: IdUserService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.myDialog5 = new ElementRef(null);\r\n  }\r\n\r\n  handleCalendarToggle() {\r\n    this.calendarVisible = !this.calendarVisible;\r\n  }\r\n\r\n  handleWeekendsToggle() {\r\n    const { calendarOptions } = this;\r\n    calendarOptions.weekends = !calendarOptions.weekends;\r\n  }\r\n\r\n  handleDateSelect(selectInfo: DateSelectArg) {\r\n    const dialog = (this.myDialog5 as ElementRef).nativeElement;\r\n    dialog.show();\r\n    const closeListener = () => {\r\n      this.title = this.CreateEventForm.get('title')?.value;\r\n      this.location = this.CreateEventForm.get('location')?.value;\r\n\r\n      this.SavingTitle(selectInfo);\r\n      dialog.removeEventListener('close', closeListener);\r\n    };\r\n    dialog.addEventListener('close', closeListener);\r\n    this.CreateEventForm.get('title')?.reset();\r\n  }\r\n\r\n  SavingTitle(selectInfo: DateSelectArg) {\r\n    const titleINPUT = this.title;\r\n    const calendarApi = selectInfo.view.calendar;\r\n    const locationINPUT = this.location;\r\n    calendarApi.unselect();\r\n    if (titleINPUT) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title: titleINPUT,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay,\r\n        location: locationINPUT,\r\n      });\r\n    }\r\n  }\r\n\r\n  async handleEventClick(clickInfo: EventClickArg) {\r\n    const dialog = (this.myDialog6 as ElementRef).nativeElement;\r\n    this.currentEventClicked = clickInfo.event.title;\r\n    this.currentEventClickedLOCATION = clickInfo.event.extendedProps['location']\r\n    this.currentEventClickedDATEsub = clickInfo.event.start?.toString()!\r\n    this.currentEventClickedDATE= this.currentEventClickedDATEsub.substring(0,15)// Wed Jan 18 2023\r\n    const dateC=new Date(this.currentEventClickedDATE)\r\n    const formatDate = new Date(dateC.toUTCString()).toISOString()\r\n    console.log(formatDate)\r\n    dialog.show();\r\n\r\n    while (!this.deleteEvent) {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n    }\r\n\r\n    clickInfo.event.remove();\r\n    this.deleteEvent = false;\r\n    console.log(this.deleteEvent);\r\n  }\r\n\r\n  AddAvailability(){\r\n    const dialog = (this.myDialog6 as ElementRef).nativeElement;\r\n    dialog.show();\r\n  }\r\n\r\n  POSTAvailability(availability: any) {\r\n    return this.http.post(`${environment.BaseUrl}/Availability/users/${this.idUser}/availability`, availability, {\r\n      observe: 'response',\r\n      responseType: 'text',\r\n    });\r\n  }\r\n  \r\n  handleEvents(events: EventApi[]) {\r\n    this.currentEvents = events;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}